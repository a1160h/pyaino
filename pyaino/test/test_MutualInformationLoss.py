from pyaino.Config import *
from pyaino import Neuron
from pyaino.nucleus import Function, CompositFunction
from pyaino import Functions as F
import matplotlib.pyplot as plt

z = np.array([[ 0.80263036, -0.6764009 ,  0.7247918 ,  1.1224327 ,  1.2191045 ,
         1.4590187 , -1.2993484 ,  0.31380543, -4.5081706 ,  0.02629948],
       [-0.13381018, -1.7417371 ,  0.20046026, -0.6296247 ,  0.54942274,
         1.0790668 , -1.267288  ,  0.47865438, -0.43151808,  4.0506005 ],
       [ 0.6814904 , -0.3940684 ,  1.5553756 ,  0.9419106 ,  0.659025  ,
        -1.6269783 , -0.8447561 ,  0.6742652 , -1.833287  , -2.0570762 ],
       [-0.31950915, -0.32427597,  0.10836959,  0.50535995,  0.07126907,
         1.2139575 , -0.6512315 ,  1.5464042 , -2.7322452 , -1.0406275 ],
       [-0.15454419, -0.50054675, -1.1353848 , -0.11751494, -0.94043994,
        -0.09461274, -1.0681621 , -2.6952143 , -2.115323  ,  1.0043628 ],
       [-0.14318073, -0.3109073 ,  0.4699629 ,  1.696845  , -0.97315466,
         1.6785063 , -0.30650884, -0.14288276,  1.5930111 , -1.2077808 ],
       [-0.3683689 , -1.6067952 ,  0.35103458,  0.11086965,  0.23897022,
        -1.3923357 ,  0.8329478 ,  0.42266166, -1.545687  , -2.8718927 ],
       [ 0.16802968, -0.33144006, -1.5495739 , -0.25510076,  0.611955  ,
         0.22705501, -0.66371   , -0.3371771 , -1.0686942 ,  1.413083  ],
       [-0.15727496, -0.55537885,  0.6744018 , -1.6369102 ,  0.87836206,
        -0.552982  , -2.626031  ,  0.337406  , -0.415316  ,  2.038661  ],
       [-1.4485791 , -0.95500124,  0.74701786, -0.02856064,  0.97878623,
         1.4815171 ,  0.03388518,  1.4410434 , -0.81316435,  0.24352218]],
      dtype=np.float32)

mu = np.array([[ 0.5617403 , -0.9365629 ,  0.17752141, -0.45581096,  1.2055606 ,
         0.98716927, -0.7514215 ,  0.7290273 , -0.01026439, -0.3178051 ],
       [-0.0887394 , -0.646897  ,  0.7739524 ,  0.04018965,  0.02359149,
         0.12928057, -0.8924432 ,  0.56581205, -0.65717643,  0.6622375 ],
       [-0.23837537, -0.8481157 , -0.29257232,  0.16253915,  0.61386853,
         0.4481207 , -0.5920154 ,  0.4368749 , -0.3982348 , -0.03981474],
       [-0.4167842 , -1.0465901 , -0.05371939,  0.19963828, -0.220065  ,
         0.39785105, -1.284752  ,  0.12542525, -0.52792335, -0.64683986],
       [-0.38666323, -0.94183284, -0.47460547,  0.45464155, -0.33805284,
        -0.06170589, -1.9711995 , -0.13047567, -0.9762304 ,  0.20205402],
       [-0.2778693 , -0.4421293 , -0.3423186 ,  0.11255932,  0.39025626,
         1.3406175 , -0.81057835,  0.7275831 ,  0.18249291, -0.49088773],
       [-0.23073284, -0.81822544,  0.27829573, -0.13981694,  0.57182014,
        -0.34706825, -0.7508001 ,  0.29639056, -0.910789  , -0.08611113],
       [-0.09103642, -0.44187847, -0.431883  ,  0.03557828,  0.51755553,
         0.9626323 , -0.7939447 ,  0.8595918 ,  0.02663147, -0.15450919],
       [-0.30397207, -1.1578784 ,  0.02291558, -0.2083762 ,  0.52110505,
        -0.19279182, -0.9382087 ,  0.10208354, -1.0998046 , -0.01877719],
       [ 0.14086613, -0.8201655 ,  0.21540397, -0.4591197 ,  0.5431764 ,
         0.69436604, -0.8733672 ,  0.5436438 , -0.35722917,  0.03689092]],
      dtype=np.float32)

log_var = np.array([[-9.7107506e-01, -6.9447160e-01, -5.4587287e-01,  3.1491876e-01,
        -6.2559927e-01, -4.6196756e-01, -1.2539668e+00, -8.3938524e-02,
         2.1303561e+00,  7.2295862e-01],
       [-6.0642713e-01, -9.0788054e-01, -3.0118167e-01, -8.7869421e-02,
        -7.8066045e-01, -4.1390061e-03, -2.6992309e-01,  4.5631659e-01,
         4.9362361e-01,  8.7071747e-01],
       [-5.9647745e-01, -1.1185979e+00, -7.7043116e-01,  3.2934034e-01,
        -8.1637663e-01,  3.9526635e-01, -2.9376927e-01, -5.6316239e-01,
         1.8566300e+00,  7.1479201e-01],
       [-7.3290777e-01, -1.4866447e+00,  7.8149617e-02, -1.8710386e-02,
        -5.8217722e-01, -8.4278500e-01, -3.0747658e-01,  2.9868081e-01,
         1.1492858e+00, -3.1896824e-01],
       [-1.2962201e+00, -1.1633577e+00, -4.3138605e-01, -5.2589333e-01,
        -9.7561765e-01,  2.7012080e-02, -1.6297579e-01,  9.1060829e-01,
         8.0307400e-01, -1.4246786e-01],
       [-8.9654320e-01, -7.6317602e-01, -2.5829858e-01,  4.0971495e-02,
        -4.1756105e-01,  1.5553594e-02, -6.2366915e-01, -2.0832630e-01,
         1.2177734e+00,  2.1712360e-01],
       [-7.7792245e-01, -1.6782053e+00, -6.4006793e-01, -5.9897041e-01,
        -1.1705682e+00, -2.9863480e-01, -1.4764017e-01,  8.6550230e-01,
        -4.7416389e-02,  8.4123242e-01],
       [-6.9584960e-01, -3.5374713e-01, -8.9003050e-01,  6.7212081e-01,
        -7.3246253e-01,  5.2419317e-01, -1.0892692e+00, -3.4463680e-01,
         8.9238989e-01,  7.3686802e-01],
       [-9.1014528e-01, -1.3702344e+00, -5.5143267e-01, -2.5709325e-01,
        -1.2343439e+00, -1.5661716e-03, -2.3781121e-01,  7.6022816e-01,
         1.6146404e-01,  6.7047298e-01],
       [-7.0230758e-01, -1.0382946e+00, -7.9653108e-01,  5.4396849e-02,
        -9.5546913e-01, -2.8248164e-01, -5.3965694e-01,  4.2157629e-01,
         1.3133279e+00,  5.3466380e-01]], dtype=np.float32)



model = Neuron.MutualInformationLoss()
mi_loss = model.forward(z, mu, log_var)
print(mi_loss)

gz, gmu, glogvar = model.backward()

plt.plot(z.reshape(-1).tolist(), label='z')
plt.plot(mu.reshape(-1).tolist(), label='mu')
plt.plot(log_var.reshape(-1).tolist(), label='log_var')
plt.plot(gz.reshape(-1).tolist(), label='gz')
plt.plot(gmu.reshape(-1).tolist(), label='gmu')
plt.plot(glogvar.reshape(-1).tolist(), label='glogvar')
plt.legend()
plt.show()

print('gz')
print(gz)
print('gmu')
print(gmu)
print('glogvar')
print(glogvar)

    

